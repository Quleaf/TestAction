name: ci

on:
  push:

jobs:
  docker:
    runs-on: work
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Ensure engough history is available

      - name: Get changed files
        id: changed_files
        run: |
          files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} '*.dockerfile')
          if [ -z "$files" ]; then
            echo "No dockerfile has been modified"
          else
            echo "Files changed: $files"
            echo "files=$files" >> $GITHUB_OUTPUT
          fi

      - name: Debug output
        run: |
          echo "Files from output: ${{ steps.changed_files.outputs.files }}"

      - name: Check single dockerfile modification
        if: contains(steps.changed_files.outputs.files, '\n')
        run: echo "We skipped compilation once multi-dockerfile have been modified"

      - name: Set up QEMU
        if: "!contains(steps.changed_files.outputs.files, '\n') && steps.changed_files.outputs.files != ''"
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: "!contains(steps.changed_files.outputs.files, '\n') && steps.changed_files.outputs.files != ''"
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: "!contains(steps.changed_files.outputs.files, '\n') && steps.changed_files.outputs.files != ''"
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Parse file path
        if: "!contains(steps.changed_files.outputs.files, '\n') && steps.changed_files.outputs.files != ''"
        id: parse_path
        run: |
          file="${{ steps.changed_files.outputs.files }}"
          echo "File: $file"
          dir=$(dirname "$file")
          echo "Directory: $dir"
          base=$(basename "$file")
          echo "Base: $base"
          dockerfile_name="${base%.*}"
          echo "Dockerfile name: $dockerfile_name"
          # Determine platform
          if [[ "$dir" == *"x86"* ]]; then
            platform="linux/amd64"
            platform_tag="x86"
          elif [[ "$dir" == *"arm"* ]]; then
            platform="linux/arm64"
            platform_tag="arm"
          else
            echo "Unknown directory for $file. Exiting."
            exit 1
          fi
          echo "Platform: $platform"
          echo "Platform tag: $platform_tag"
          echo "dockerfile_name=$dockerfile_name" >> $GITHUB_OUTPUT
          echo "platform=$platform" >> $GITHUB_OUTPUT
          echo "platform_tag=$platform_tag" >> $GITHUB_OUTPUT
          echo "directory=$dir" >> $GITHUB_OUTPUT

      - name: Set current date
        if: "!contains(steps.changed_files.outputs.files, '\n') && steps.changed_files.outputs.files != ''"
        id: date
        run: |
          date_tag=$(date +'%m-%d')
          echo "Date tag: $date_tag"
          echo "date=$date_tag" >> $GITHUB_OUTPUT

      - name: Debug variables before build
        if: "!contains(steps.changed_files.outputs.files, '\n') && steps.changed_files.outputs.files != ''"
        run: |
          echo "Context: ${{ github.workspace }}/${{ steps.parse_path.outputs.directory }}"
          echo "File: ${{ github.workspace }}/${{ steps.changed_files.outputs.files }}"
          echo "Tag: klinus/${{ steps.parse_path.outputs.dockerfile_name }}-${{ steps.parse_path.outputs.platform_tag }}:${{ steps.date.outputs.date }}"
          echo "Platforms: ${{ steps.parse_path.outputs.platform }}"

      - name: Build and push single image
        if: "!contains(steps.changed_files.outputs.files, '\n') && steps.changed_files.outputs.files != ''"
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/${{ steps.parse_path.outputs.directory }}
          file: ${{ github.workspace }}/${{ steps.changed_files.outputs.files }}
          tags: klinus/${{ steps.parse_path.outputs.dockerfile_name }}-${{ steps.parse_path.outputs.platform_tag }}:${{ steps.date.outputs.date }}
          platforms: ${{ steps.parse_path.outputs.platform }}
          push: true
