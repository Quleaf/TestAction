name: ci

on:
  push:

jobs:
  build_and_scan:
    runs-on: work
    outputs:
      dockerfile_name: ${{ steps.parse_path.outputs.dockerfile_name }}
      platform_tag: ${{ steps.parse_path.outputs.platform_tag }}
      date: ${{ steps.date.outputs.date }}
      image: localhost:5000/${{ steps.parse_path.outputs.dockerfile_name }}:${{ steps.parse_path.outputs.platform_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed_files
        run: |
          files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} '*.dockerfile')
          if [ -z "$files" ]; then
            echo "No dockerfile has been modified"
          else
            echo "Files changed: $files"
            echo "files=$files" >> $GITHUB_OUTPUT
          fi

      - name: Setup QEMU and Docker Buildx
        uses: docker/setup-buildx-action@v3

      # - name: Login to Local Docker Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: localhost:5000
      #     username: ${{ secrets.LOCAL_REGISTRY_USERNAME }}
      #     password: ${{ secrets.LOCAL_REGISTRY_PASSWORD }}

      - name: Parse file path and determine platform
        id: parse_path
        run: |
          file="${{ steps.changed_files.outputs.files }}"
          dir=$(dirname "$file")
          base=$(basename "$file")
          dockerfile_name="${base%.*}"
          if [[ "$dir" == *"x86"* ]]; then
            platform="linux/amd64"
            platform_tag="x86"
          elif [[ "$dir" == *"arm"* ]]; then
            platform="linux/arm64"
            platform_tag="arm"
          else
            echo "Unknown directory for $file. Exiting."
            exit 1
          fi
          echo "::set-output name=dockerfile_name::$dockerfile_name"
          echo "::set-output name=platform_tag::$platform_tag"
          echo "::set-output name=platform::$platform"
          echo "::set-output name=date::$(date +'%m-%d')"

      - name: Build and push image to local registry
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/${{ steps.parse_path.outputs.directory }}
          file: ${{ github.workspace }}/${{ steps.changed_files.outputs.files }}
          tags: localhost:5000/${{ steps.parse_path.outputs.dockerfile_name }}:${{ steps.parse_path.outputs.platform_tag }}
          push: true

      - name: Scan the Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: localhost:5000/${{ steps.parse_path.outputs.dockerfile_name }}:${{ steps.parse_path.outputs.platform_tag }}
          format: 'table'
          output: './trivy-reports/trivy-report-${{ steps.parse_path.outputs.dockerfile_name }}.txt'

      - name: Upload Trivy scan report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: ./trivy-reports/trivy-report-${{ steps.parse_path.outputs.dockerfile_name }}.txt

  push_to_public:
    needs: build_and_scan
    runs-on: work
    environment:
      name: manual_approval
    steps:
      - name: Download Trivy scan report
        uses: actions/download-artifact@v3
        with:
          name: trivy-report

      # - name: Login to Local Docker Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: localhost:5000
      #     username: ${{ secrets.LOCAL_REGISTRY_USERNAME }}
      #     password: ${{ secrets.LOCAL_REGISTRY_PASSWORD }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Quay Container Registry
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_TOKEN }}

      - name: Pull and re-tag image for public registries
        run: |
          docker pull localhost:5000/${{ needs.build_and_scan.outputs.image }}
          docker tag localhost:5000/${{ needs.build_and_scan.outputs.image }} klinus/${{ needs.build_and_scan.outputs.dockerfile_name }}-${{ needs.build_and_scan.outputs.platform_tag }}:${{ needs.build_and_scan.outputs.date }}
          docker tag localhost:5000/${{ needs.build_and_scan.outputs.image }} quay.io/klinus/${{ needs.build_and_scan.outputs.dockerfile_name }}-${{ needs.build_and_scan.outputs.platform_tag }}:${{ needs.build_and_scan.outputs.date }}

      - name: Push image to public registries
        run: |
          docker push klinus/${{ needs.build_and_scan.outputs.dockerfile_name }}-${{ needs.build_and_scan.outputs.platform_tag }}:${{ needs.build_and_scan.outputs.date }}
          docker push quay.io/klinus/${{ needs.build_and_scan.outputs.dockerfile_name }}-${{ needs.build_and_scan.outputs.platform_tag }}:${{ needs.build_and_scan.outputs.date }}
