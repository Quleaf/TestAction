name: ci

on:
  push:

jobs:
  PREPARE-job:
    runs-on: work
    outputs:
      dockerfile_name: ${{ steps.parse_path.outputs.dockerfile_name }}
      platform_tag: ${{ steps.parse_path.outputs.platform_tag }}
      date: ${{ steps.date.outputs.date }}
      proceed_valid: ${{ steps.set_proceed_flag.outputs.proceed_valid }}
      directory: ${{ steps.parse_path.outputs.directory }}
      files: ${{ steps.changed_files.outputs.files }}
      platform: ${{ steps.parse_path.outputs.platform }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Ensure enough history is available

      - name: Get changed files
        id: changed_files
        run: |
          files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} '*.dockerfile')
          if [ -z "$files" ]; then
            echo "No dockerfile has been modified"
            echo "proceed_valid=false" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Files changed: $files"
            echo "files=$files" >> $GITHUB_OUTPUT
          fi

      - name: Debug output of changed files
        run: |
          echo "Files from output: ${{ steps.changed_files.outputs.files }}"

      - name: Set proceed flag
        id: set_proceed_flag
        run: |
          if [ -z "${{ steps.changed_files.outputs.files }}" ]; then
            echo "No Dockerfile has been modified. Setting proceed_valid to false."
            echo "proceed_valid=false" >> $GITHUB_OUTPUT
            exit 0
          elif echo "${{ steps.changed_files.outputs.files }}" | grep -q '\n'; then
            echo "Multiple Dockerfiles have been modified. Setting proceed_valid to false."
            echo "proceed_valid=false" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Single Dockerfile has been modified. Setting proceed_valid to true."
            echo "proceed_valid=true" >> $GITHUB_OUTPUT
          fi


      - name: Parse file path
        if: steps.set_proceed_flag.outputs.proceed_valid == 'true'
        id: parse_path
        run: |
          file="${{ steps.changed_files.outputs.files }}"
          echo "File: $file"
          dir=$(dirname "$file")
          echo "Directory: $dir"
          base=$(basename "$file")
          echo "Base: $base"
          dockerfile_name="${base%.*}"
          echo "Dockerfile name: $dockerfile_name"
          # Determine platform
          if [[ "$dir" == *"x86"* ]]; then
            platform="linux/amd64"
            platform_tag="x86"
          elif [[ "$dir" == *"arm"* ]]; then
            platform="linux/arm64"
            platform_tag="arm"
          else
            echo "Unknown directory for $file. Exiting."
            exit 1
          fi
          echo "Platform: $platform"
          echo "Platform tag: $platform_tag"
          echo "dockerfile_name=$dockerfile_name" >> $GITHUB_OUTPUT
          echo "platform=$platform" >> $GITHUB_OUTPUT
          echo "platform_tag=$platform_tag" >> $GITHUB_OUTPUT
          echo "directory=$dir" >> $GITHUB_OUTPUT

      - name: Set current date
        if: steps.set_proceed_flag.outputs.proceed_valid == 'true'
        id: date
        run: |
          date_tag=$(date +'%m-%d')
          echo "Date tag: $date_tag"
          echo "date=$date_tag" >> $GITHUB_OUTPUT

      - name: Debug variables before build
        if: steps.set_proceed_flag.outputs.proceed_valid == 'true'
        run: |
          echo "Context: ${{ github.workspace }}/${{ steps.parse_path.outputs.directory }}"
          echo "File: ${{ github.workspace }}/${{ steps.changed_files.outputs.files }}"
          echo "Tag: klinus/${{ steps.parse_path.outputs.dockerfile_name }}-${{ steps.parse_path.outputs.platform_tag }}:${{ steps.date.outputs.date }}"
          echo "Platforms: ${{ steps.parse_path.outputs.platform }}"
  
  BUILD-AND-PUSH-job:
    needs: PREPARE-job
    runs-on: work
    if: needs.PREPARE-job.outputs.proceed_valid == 'true'
    # env:
    #   BUCKET: pawsey0001-image-compilation
    #   DESTINATION_PATH: ${{ needs.PREPARE-job.outputs.dockerfile_name }}-${{ needs.PREPARE-job.outputs.platform_tag }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ needs.PREPARE-job.outputs.platform }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          install: true
    
      - name: Show current Buildx builders
        run: docker buildx ls

      - name: Enable BuildKit
        run: echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV            

      - name: Build Docker image locally, save to tar file and move to persistent storage
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/${{ needs.PREPARE-job.outputs.directory }}
          file: ${{ github.workspace }}/${{ needs.PREPARE-job.outputs.files }}
          tags: | 
            klinus/${{ needs.PREPARE-job.outputs.dockerfile_name }}-${{ needs.PREPARE-job.outputs.platform_tag }}:${{ needs.PREPARE-job.outputs.date }}
          platforms: ${{ needs.PREPARE-job.outputs.platform }}
          push: false
          load: true
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save Docker image to tar file
        run: |
          docker save -o ${GITHUB_WORKSPACE}/image.tar klinus/${{ needs.PREPARE-job.outputs.dockerfile_name }}-${{ needs.PREPARE-job.outputs.platform_tag }}:${{ needs.PREPARE-job.outputs.date }}
          echo "Docker image saved to ${GITHUB_WORKSPACE}/image.tar"

      - name: Move image.tar to persistent storage "/home/runner/artifacts"
        run: |
          sudo mkdir -p /home/runner/artifacts/${{ needs.PREPARE-job.outputs.dockerfile_name }}-${{ needs.PREPARE-job.outputs.platform_tag }}
          sudo mv ${GITHUB_WORKSPACE}/image.tar /home/runner/artifacts/${{ needs.PREPARE-job.outputs.dockerfile_name }}-${{ needs.PREPARE-job.outputs.platform_tag }}/image.tar
          echo "Moved image.tar to /home/runner/artifacts/${{ needs.PREPARE-job.outputs.dockerfile_name }}-${{ needs.PREPARE-job.outputs.platform_tag }}/image.tar"

      # - name: Setup rclone
      #   uses: ./.github/actions/setup-rclone
      #   with:
      #     access_key_id: ${{ secrets.ACACIA_ACCESS_KEY_ID }}
      #     secret_access_key: ${{ secrets.ACACIA_SECRET_ACCESS_KEY }}
      #     endpoint: https://projects.pawsey.org.au
      #     bucket: ${{ env.BUCKET }}
      #     destination_path: ${{ env.DESTINATION_PATH }}

      # - name: Upload image tar to S3 with rclone
      #   run: |
      #     set -e
      #     rclone copy ${{ github.workspace }}/image.tar pawsey0001:"${{ env.BUCKET }}/${{ env.DESTINATION_PATH }}/"

  SCAN-AND-REPORT-job:
    needs: [BUILD-AND-PUSH-job, PREPARE-job]
    runs-on: work
    if: needs.PREPARE-job.outputs.proceed_valid == 'true'
    steps:
      - name: Move back persistent storage "/home/runner/artifacts" to current directory
        run: |
          sudo mv /home/runner/artifacts/${{ needs.PREPARE-job.outputs.dockerfile_name }}-${{ needs.PREPARE-job.outputs.platform_tag }}/image.tar ${GITHUB_WORKSPACE}
          echo "Moved image.tar from /home/runner/artifacts/${{ needs.PREPARE-job.outputs.dockerfile_name }}-${{ needs.PREPARE-job.outputs.platform_tag }}/image.tar to ${GITHUB_WORKSPACE}"


      - name: Create Trivy report directory
        run: mkdir -p ./trivy-reports
  
      - name: Scan the Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          input: './image.tar'        
          format: 'table'
          output: './trivy-reports/trivy-report-${{ needs.PREPARE-job.outputs.dockerfile_name }}.txt'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      
      - name: Add Trivy report to GitHub Actions summary
        run: |
          echo '## Trivy Scan Report for ${{ needs.PREPARE-job.outputs.dockerfile_name }}' >> $GITHUB_STEP_SUMMARY
          cat ./trivy-reports/trivy-report-${{ needs.PREPARE-job.outputs.dockerfile_name }}.txt >> $GITHUB_STEP_SUMMARY

      - name: Upload Trivy scan report
        uses: actions/upload-artifact@v4
        with:
            name: trivy-report-${{ needs.PREPARE-job.outputs.dockerfile_name }}
            path: ${{ github.workspace }}/trivy-reports/trivy-report-${{ needs.PREPARE-job.outputs.dockerfile_name}}.txt

  # APPROVE-AND-DEPLOY-job:
  #   needs: [SCAN-AND-REPORT-job, PREPARE-job]
  #   runs-on: work
  #   if: needs.PREPARE-job.outputs.proceed_valid == 'true'
  #   steps:
  #     - name: Wait for manual approval
  #       uses: trstringer/manual-approval@v1
  #       with:
  #         secret: ${{ github.TOKEN }}
  #         approvers: Quleaf
  #         minimum-approvals: 1
  #         issue-title: "Approval for deployment"
  #         issue-body: "Please approve or deny the deployment of the Docker image."
  #         exclude-workflow-initiator-as-approver: false

  APPROVE-AND-DEPLOY-job:
    needs: [SCAN-AND-REPORT-job, PREPARE-job]
    runs-on: work
    if: needs.PREPARE-job.outputs.proceed_valid == 'true'
    environment:
      name: manual_approval
    steps:
      - name: Login to Docker Hub       
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
  #     - name: Login to quay Container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: quay.io
  #         username: ${{ vars.QUAYIO_USERNAME }}
  #         password: ${{ secrets.QUAYIO_TOKEN }}
      

  #     - name: Pull Docker image from Docker Hub
  #       run: |
  #         docker pull klinus/${{ needs.PREPARE-job.outputs.dockerfile_name }}-${{ needs.PREPARE-job.outputs.platform_tag }}:${{ needs.PREPARE-job.outputs.date }}

  #     - name: Tag Docker image for Quay.IO
  #       run: |
  #         docker tag klinus/${{ needs.PREPARE-job.outputs.dockerfile_name }}-${{ needs.PREPARE-job.outputs.platform_tag }}:${{ needs.PREPARE-job.outputs.date }} quay.io/klinus/${{ needs.PREPARE-job.outputs.dockerfile_name }}-${{ needs.PREPARE-job.outputs.platform_tag }}:${{ needs.PREPARE-job.outputs.date }}

  #     - name: Push Docker image to Quay.IO after approval
  #       run: |
  #         docker push quay.io/klinus/${{ needs.PREPARE-job.outputs.dockerfile_name }}-${{ needs.PREPARE-job.outputs.platform_tag }}:${{ needs.PREPARE-job.outputs.date }}