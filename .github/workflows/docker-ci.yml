name: ci

on:
  push:

jobs:
  docker:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Ensure sufficient git history for comparison

      - name: Get changed files
        id: changed_files
        run: |
          files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} '*.dockerfile')
          echo "files=$files" >> $GITHUB_ENV

      - name: Check single dockerfile modification
        if: contains(env.files, '\n')
        run: echo "We skipped compilation once multi-dockerfile have been modified"

      - name: Set up QEMU
        if: "!contains(env.files, '\n') && env.files != ''"
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: "!contains(env.files, '\n') && env.files != ''"
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: "!contains(env.files, '\n') && env.files != ''"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push single image
        if: "!contains(env.files, '\n') && contains(env.files, '.dockerfile')"
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/${{ steps.parse_path.outputs.directory }}
          file: ${{ github.workspace }}/${{ env.files }}
          tags: klinus/${{ steps.parse_path.outputs.dockerfile_name }}-${{ steps.parse_path.outputs.platform_tag }}:${{ steps.date.outputs.date }}
          platforms: ${{ steps.parse_path.outputs.platform }}
          push: true

      - name: Parse file path
        if: "!contains(env.files, '\n') && contains(env.files, '.dockerfile')"
        id: parse_path
        run: |
          file="${{ env.files }}"
          dir=$(dirname "$file")
          base=$(basename "$file")
          dockerfile_name="${base%.*}"
          # Determine platform
          if [[ "$dir" == *"x86"* ]]; then
            platform="linux/amd64"
            platform_tag="x86"
          elif [[ "$dir" == *"arm"* ]]; then
            platform="linux/arm64"
            platform_tag="arm"
          else
            echo "Unknown directory for $file. Exiting."
            exit 1
          fi
          echo "::set-output name=dockerfile_name::$dockerfile_name"
          echo "::set-output name=platform::$platform"
          echo "::set-output name=platform_tag::$platform_tag"
          echo "::set-output name=directory::$dir"

      - name: Set current date
        if: "!contains(env.files, '\n') && contains(env.files, '.dockerfile')"
        id: date
        run: echo "::set-output name=date::$(date +'%m-%d')"